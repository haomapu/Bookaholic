{"ast":null,"code":"const express = require('express');\n\nconst bodyParser = require('body-parser');\n\nvar connection = require('express-myconnection');\n\nvar mysql = require('mysql');\n\nconst app = express();\napp.use(bodyParser.json());\napp.use(connection(mysql, {\n  host: 'localhost',\n  //'localhost',\n  user: 'userEHX',\n  password: 'hMmx56FN4GHpMXOl',\n  port: 3306,\n  //port mysql\n  database: 'sampledb'\n}, 'pool')); //or single\n\napp.post('/add_book', (req, res) => {\n  let {\n    book_name,\n    author\n  } = req.body;\n  if (!book_name) return res.status(400).json('Book Name cant be blank');\n  if (!author) return res.status(400).json('Author cant be blank');\n  var data = {\n    book_name: book_name,\n    author: author\n  };\n  var query = connection.query(\"INSERT INTO books set ? \", data, function (err, rows) {\n    if (err) {\n      //If error\n      res.status(400).json('Sorry!!Unable To Add');\n      console.log(\"Error inserting : %s \", err);\n    } else res.status(200).json('Book Added Successfully!!');\n  });\n});\napp.listen(3000, () => {\n  console.log(`app is running on port 3000`);\n});","map":{"version":3,"names":["express","require","bodyParser","connection","mysql","app","use","json","host","user","password","port","database","post","req","res","book_name","author","body","status","data","query","err","rows","console","log","listen"],"sources":["C:/Users/Admin/Desktop/SE/pagelogin/PageLogin/src/Backend.js"],"sourcesContent":["const express = require('express');\r\nconst bodyParser = require('body-parser');\r\nvar connection  = require('express-myconnection'); \r\nvar mysql = require('mysql');\r\n\r\nconst app = express(); \r\napp.use(bodyParser.json());\r\n\r\napp.use(\r\n\r\n        connection(mysql,{\r\n\r\n            host: 'localhost', //'localhost',\r\n            user: 'userEHX',\r\n            password : 'hMmx56FN4GHpMXOl',\r\n            port : 3306, //port mysql\r\n            database:'sampledb'\r\n\r\n        },'pool')); //or single\r\n\r\n        app.post('/add_book',(req,res)=>{\r\n\r\n            let {book_name,author,} = req.body;\r\n\r\n\r\n            if(!book_name) return res.status(400).json('Book Name cant be blank');\r\n            if(!author) return res.status(400).json('Author cant be blank');\r\n\r\n            var data={book_name:book_name,\r\n                    author:author};\r\n\r\n\r\n            var query = connection.query(\"INSERT INTO books set ? \",data, \r\n            function(err, rows)\r\n            {\r\n\r\n                if (err){\r\n                //If error\r\n                res.status(400).json('Sorry!!Unable To Add');\r\n                console.log(\"Error inserting : %s \",err );\r\n                }\r\n                else\r\n                res.status(200).json('Book Added Successfully!!')\r\n            });\r\n        });\r\n\r\n\r\n        app.listen(3000, ()=> {\r\n        console.log(`app is running on port 3000`);\r\n});"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAIE,UAAU,GAAIF,OAAO,CAAC,sBAAD,CAAzB;;AACA,IAAIG,KAAK,GAAGH,OAAO,CAAC,OAAD,CAAnB;;AAEA,MAAMI,GAAG,GAAGL,OAAO,EAAnB;AACAK,GAAG,CAACC,GAAJ,CAAQJ,UAAU,CAACK,IAAX,EAAR;AAEAF,GAAG,CAACC,GAAJ,CAEQH,UAAU,CAACC,KAAD,EAAO;EAEbI,IAAI,EAAE,WAFO;EAEM;EACnBC,IAAI,EAAE,SAHO;EAIbC,QAAQ,EAAG,kBAJE;EAKbC,IAAI,EAAG,IALM;EAKA;EACbC,QAAQ,EAAC;AANI,CAAP,EAQR,MARQ,CAFlB,E,CAUoB;;AAEZP,GAAG,CAACQ,IAAJ,CAAS,WAAT,EAAqB,CAACC,GAAD,EAAKC,GAAL,KAAW;EAE5B,IAAI;IAACC,SAAD;IAAWC;EAAX,IAAsBH,GAAG,CAACI,IAA9B;EAGA,IAAG,CAACF,SAAJ,EAAe,OAAOD,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB,yBAArB,CAAP;EACf,IAAG,CAACU,MAAJ,EAAY,OAAOF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB,sBAArB,CAAP;EAEZ,IAAIa,IAAI,GAAC;IAACJ,SAAS,EAACA,SAAX;IACDC,MAAM,EAACA;EADN,CAAT;EAIA,IAAII,KAAK,GAAGlB,UAAU,CAACkB,KAAX,CAAiB,0BAAjB,EAA4CD,IAA5C,EACZ,UAASE,GAAT,EAAcC,IAAd,EACA;IAEI,IAAID,GAAJ,EAAQ;MACR;MACAP,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB,sBAArB;MACAiB,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoCH,GAApC;IACC,CAJD,MAMAP,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB,2BAArB;EACH,CAXW,CAAZ;AAYH,CAxBD;AA2BAF,GAAG,CAACqB,MAAJ,CAAW,IAAX,EAAiB,MAAK;EACtBF,OAAO,CAACC,GAAR,CAAa,6BAAb;AACP,CAFO"},"metadata":{},"sourceType":"module"}